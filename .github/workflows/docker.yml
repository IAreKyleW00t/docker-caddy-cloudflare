name: Docker

on:
  push:
    branches: [main]
    paths:
      - Dockerfile
      - .dockerignore
      - .github/workflows/docker.yml
  pull_request:
    branches: [main]
    paths:
      - Dockerfile
      - .dockerignore
      - .github/workflows/docker.yml

jobs:
  docker:
    name: Build and Publish Docker image
    runs-on: ubuntu-latest
    permissions:
      security-events: write # for uploading trivy results
      id-token: write # for keyless cosign signatures
      contents: write
      packages: write
    env:
      DOCKER_BUILDKIT: 1

    steps:
      - name: Checkout GitHub repository
        uses: actions/checkout@v3

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.0.1
        if: github.event_name == 'push'

      - name: Generate Docker-compliant image name from repository
        run: echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY,,} | sed 's/docker-//')" | tee -a $GITHUB_ENV

      - name: Generate image title from repository
        run: echo "IMAGE_TITLE=$(echo ${GITHUB_REPOSITORY#*/} | sed 's/docker-//')" | tee -a $GITHUB_ENV

      - name: Parse Caddy version from Dockerfile
        run: echo "CADDY_VERSION=$(grep -Eo 'caddy:[0-9]+\.[0-9]+\.[0-9]+$' Dockerfile | cut -d ':' -f2)" | tee -a $GITHUB_ENV

      - name: Generate Docker metadata with Caddy version
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: |
            docker.io/${{ env.IMAGE_NAME }}
            ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=v${{ env.CADDY_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ env.CADDY_VERSION }}
            type=semver,pattern={{major}},value=v${{ env.CADDY_VERSION }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_TITLE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: github.event_name == 'push'
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Repository
        uses: docker/login-action@v2
        if: github.event_name == 'push'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build Docker image
        uses: docker/build-push-action@v4
        id: build
        with:
          context: .
          push: true
          tags: ttl.sh/${{ env.IMAGE_NAME }}:${{ github.sha }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/arm/v7,linux/arm/v6 # match caddy
          cache-from: type=registry,ref=ttl.sh/${{ env.IMAGE_NAME }}-cache:3h
          cache-to: type=registry,ref=ttl.sh/${{ env.IMAGE_NAME }}-cache:3h

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.9.2
        with:
          image-ref: ttl.sh/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}
          ignore-unfixed: true
          format: sarif
          output: trivy-results.sarif
          severity: HIGH,CRITICAL

      - name: Upload Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: trivy-results.sarif

      - name: Push Docker image
        uses: docker/build-push-action@v4
        if: github.event_name == 'push'
        id: release
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          cache-from: type=registry,ref=ttl.sh/${{ env.IMAGE_NAME }}-cache:3h

      - name: Sign Docker images
        if: github.event_name == 'push'
        run: |
          cosign sign -y -r "docker.io/${{ env.IMAGE_NAME }}@${{ steps.release.outputs.digest }}"
          cosign sign -y -r "ghcr.io/${{ env.IMAGE_NAME }}@${{ steps.release.outputs.digest }}"

      - name: Push version tags
        if: github.event_name == 'push'
        run: |
          MAJOR=$(echo $CADDY_VERSION | cut -d . -f 1)
          MINOR=$(echo $CADDY_VERSION | cut -d . -f 2)
          git tag -f "v$MAJOR"
          git tag -f "v$MAJOR.$MINOR"
          git tag -f "v$CADDY_VERSION"
          git push -f -u origin "v$MAJOR"
          git push -f -u origin "v$MAJOR.$MINOR"
          git push -f -u origin "v$CADDY_VERSION"

      - name: Re-scan latest Docker image after publishing
        if: github.event_name == 'push'
        uses: ./.github/workflows/trivy.yml
